{"version":3,"sources":["../node_modules/codemirror/theme sync /^/.//.*/.css$","utils/link.ts","states/markdown.ts","constants/readme.ts","components/renderer/elements.tsx","components/renderer/references.tsx","states/id.ts","components/renderer/renderer.tsx","utils/copy-to-clipboard.ts","components/renderer/index.tsx","constants/editorThemes.ts","states/preferences/editor.ts","components/action.tsx","components/icons.tsx","components/popup/portal.tsx","components/popup/popup.tsx","components/settings/index.tsx","components/preferences.tsx","components/editor/editor.tsx","components/editor/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","isExternal","href","startsWith","markdownState","atom","key","default","linkRegExp","linksState","selector","get","array","Array","from","matchAll","text","indexMap","Map","index","forEach","has","set","filter","referLinksState","ReferLink","children","useRecoilValue","findIndex","link","useReferLinkIndex","H2","isReactElement","something","$$typeof","Symbol","for","tableStyles","thead","style","css","tr","th","tbody","td","getStyle","path","segments","split","current","getItems","child","type","listStyles","References","referLinks","textAlign","color","lineHeight","fontSize","margin","Fragment","rendererState","nanoid","processor","unified","use","remarkParse","remarkGfm","remarkSlug","remarkToc","remarkRehype","rehypeHighlight","rehypeReact","createElement","React","components","a","title","blockquote","pre","props","language","className","h1","h2","p","table","Children","find","child_thead","child_body","ol","ul","Renderer","markdown","rendererIDState","useMemo","processSync","result","backgroundColor","padding","width","editableElement","navigator","clipboard","html","innerHTML","blobInput","Blob","clipboardItemInput","ClipboardItem","write","then","range","document","createRange","selectNode","select","window","getSelection","removeAllRanges","addRange","execCommand","setTimeout","Promise","copyToClipboard","ConfiguredRenderer","handleCopy","useCallback","querySelector","onClick","editorThemes","availableThemesState","editorThemeState","editorFontSizeState","ActionBar","Settings","size","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","IconButton","icon","rest","useContainer","useState","container","setContainer","useEffect","dom","Math","random","substr","body","appendChild","getElementById","removeChild","Portal","ReactDOM","createPortal","ControlledPopup","render","opened","handleClose","Transition","in","Boolean","timeout","state","Popup","Editor","availableThemes","useRecoilState","theme","setTheme","handleThemeChange","target","value","setFontSize","onChange","parseInt","Proferences","settingsOpened","setSettingsOpened","handleOpen","SettingsPanelPopup","ref","useRef","editor","setEditor","setMarkdown","initialValue","handleChange","instance","getValue","CodeMirror","mode","name","highlightFormatting","tabSize","on","getDoc","setValue","off","setOption","require","ConfiguredEditor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.c74e4b76.chunk.js","sourcesContent":["var map = {\n\t\"./3024-day.css\": 140,\n\t\"./3024-night.css\": 141,\n\t\"./abbott.css\": 142,\n\t\"./abcdef.css\": 143,\n\t\"./ambiance-mobile.css\": 144,\n\t\"./ambiance.css\": 145,\n\t\"./ayu-dark.css\": 146,\n\t\"./ayu-mirage.css\": 147,\n\t\"./base16-dark.css\": 148,\n\t\"./base16-light.css\": 149,\n\t\"./bespin.css\": 150,\n\t\"./blackboard.css\": 151,\n\t\"./cobalt.css\": 152,\n\t\"./colorforth.css\": 153,\n\t\"./darcula.css\": 154,\n\t\"./dracula.css\": 155,\n\t\"./duotone-dark.css\": 156,\n\t\"./duotone-light.css\": 157,\n\t\"./eclipse.css\": 158,\n\t\"./elegant.css\": 159,\n\t\"./erlang-dark.css\": 160,\n\t\"./gruvbox-dark.css\": 161,\n\t\"./hopscotch.css\": 162,\n\t\"./icecoder.css\": 163,\n\t\"./idea.css\": 164,\n\t\"./isotope.css\": 165,\n\t\"./juejin.css\": 166,\n\t\"./lesser-dark.css\": 167,\n\t\"./liquibyte.css\": 168,\n\t\"./lucario.css\": 169,\n\t\"./material-darker.css\": 170,\n\t\"./material-ocean.css\": 171,\n\t\"./material-palenight.css\": 172,\n\t\"./material.css\": 173,\n\t\"./mbo.css\": 174,\n\t\"./mdn-like.css\": 175,\n\t\"./midnight.css\": 176,\n\t\"./monokai.css\": 177,\n\t\"./moxer.css\": 178,\n\t\"./neat.css\": 179,\n\t\"./neo.css\": 180,\n\t\"./night.css\": 181,\n\t\"./nord.css\": 182,\n\t\"./oceanic-next.css\": 183,\n\t\"./panda-syntax.css\": 184,\n\t\"./paraiso-dark.css\": 185,\n\t\"./paraiso-light.css\": 186,\n\t\"./pastel-on-dark.css\": 187,\n\t\"./railscasts.css\": 188,\n\t\"./rubyblue.css\": 189,\n\t\"./seti.css\": 190,\n\t\"./shadowfox.css\": 191,\n\t\"./solarized.css\": 192,\n\t\"./ssms.css\": 193,\n\t\"./the-matrix.css\": 194,\n\t\"./tomorrow-night-bright.css\": 195,\n\t\"./tomorrow-night-eighties.css\": 196,\n\t\"./ttcn.css\": 197,\n\t\"./twilight.css\": 198,\n\t\"./vibrant-ink.css\": 199,\n\t\"./xq-dark.css\": 200,\n\t\"./xq-light.css\": 201,\n\t\"./yeti.css\": 202,\n\t\"./yonce.css\": 203,\n\t\"./zenburn.css\": 204\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 139;","function isExternal(href: string) {\n  return !href.startsWith('https://mp.weixin.qq.com')\n}\n\nexport { isExternal }\n","import { atom, selector } from 'recoil'\nimport readme from 'constants/readme'\nimport { isExternal } from 'utils/link'\n\nexport const markdownState = atom<string>({\n  key: 'markdownState',\n  default: readme,\n})\n\ninterface LinkProps {\n  text: string\n  href: string\n}\n\n// eslint-disable-next-line no-useless-escape\nconst linkRegExp = /(?<!!)\\[([^\\[\\]]+)\\]\\(([^\\(\\)]*)\\)/gi\n\nexport const linksState = selector<LinkProps[]>({\n  key: 'linksState',\n  get: ({ get }) => {\n    const array = Array.from(get(markdownState).matchAll(linkRegExp)).map(([, text, href]) => ({ text, href }))\n    const indexMap = new Map<string, number>()\n    array.map(({ href }, index) => ({ href, index })).forEach(({ href, index }) => indexMap.has(href) || indexMap.set(href, index))\n    return array.filter(({ href }, index) => indexMap.get(href) === index)\n  },\n})\n\nexport const referLinksState = selector({\n  key: 'referLinksState',\n  get: ({ get }) => {\n    const links = get(linksState)\n    return links.filter(({ href }) => isExternal(href))\n  },\n})\n","const readme = `\n# Getting Started\n\nThis is a editor for writte weixin \\`article\\` in \\`Markdown\\`.  \n\n# Why \\`Markdown\\`?\n\n\\`Markdown\\` let use write rich text in plain text way, with only a few tags. \n> Markdown is simple, fast, and cheap. \n\nRead more.\n\n# Features\n\n## Header\n\n> Quoto text here\n\nUnordered list:\n\n* item 1\n* item 2\n* item 3\n\nOrdered list:\n\n1. Item 1\n2. Item 2\n3. Item 3\n\ncode block:\n\n\\`\\`\\`javascript\nconsole.log('Out of Power!')\n\\`\\`\\`\n\nInline block \\`this is inline block\\`.\n\ntable:\n\n|Good|Price|\n|----|-----|\n|Orage|1$/ponds|\n\nI am a [link0](https://github/wangpin34/wxformmat)\nI am another [link1](https://github/wangpin34/wxformmat?v=1)\nI am another [link2](https://github/wangpin34/wxformmat) but using the same target with link0\n\n![alt text](https://github/wangpin34/wxformmat)\n`\n\nexport default readme\n","import React from 'react'\nimport { css } from 'styled-components'\nimport { isExternal } from 'utils/link'\nimport { useRecoilValue } from 'recoil'\nimport { referLinksState } from 'states/markdown'\n\nfunction useReferLinkIndex(href: string) {\n  const links = useRecoilValue(referLinksState)\n  return links.findIndex((link) => link.href === href)\n}\n\nfunction ReferLink({ children, href }: { children: any; href: string }) {\n  const index = useReferLinkIndex(href)\n  return (\n    <span\n      css={`\n        text-align: left;\n        color: #ff3502;\n        line-height: 1.5;\n        font-size: 16px;\n      `}\n    >\n      {children}\n      <sup>[{index > -1 ? index + 1 : '!'}]</sup>\n    </span>\n  )\n}\n\ninterface ComponentProps {\n  children: any\n  props?: any\n}\n\nfunction InlineCode({ children }: ComponentProps) {\n  return (\n    <strong\n      css={`\n        text-align: left;\n        color: #ff3502;\n        font-size: 16px;\n        line-height: 1.5;\n      `}\n    >\n      {children}\n    </strong>\n  )\n}\n\nfunction CodeBlock({ children }: ComponentProps) {\n  const { children: code, className: language } = children[0].props\n  return (\n    <pre\n      data-language={language}\n      css={`\n        background-color: rgba(0, 0, 0, 0.03);\n        border: 1px solid #f0f0f0;\n        color: #333;\n        border-radius: 2;\n        line-height: 26px;\n        font-size: 14px;\n        padding: 1em;\n      `}\n    >\n      <code>{code}</code>\n    </pre>\n  )\n}\n\nfunction H1({ children }: ComponentProps) {\n  return (\n    <h1\n      css={`\n        text-align: center;\n        color: #3f3f3f;\n        line-height: 1,\n        font-size: 24px;\n        margin: 80px 0 40px 0;\n        font-weight: normal;\n      `}\n    >\n      {children}\n    </h1>\n  )\n}\n\nfunction H2({ children }: ComponentProps) {\n  return (\n    <h2\n      css={`\n        text-align: left;\n        color: #3f3f3f;\n        line-height: 1.5;\n        font-size: 18px;\n        margin: 40px 0 20px 0;\n        font-weight: bold;\n      `}\n    >\n      {children}\n    </h2>\n  )\n}\n\nfunction A({ children, href }: ComponentProps & { href: string }) {\n  return isExternal(href) ? (\n    <ReferLink href={href}>{children}</ReferLink>\n  ) : (\n    <a\n      href={href}\n      title={children}\n      css={`\n        text-align: left;\n        color: #ff3502;\n        line-height: 1.5;\n        font-size: 16px;\n      `}\n    >\n      {children}\n    </a>\n  )\n}\n\nfunction Blockquote({ children }: ComponentProps) {\n  return (\n    <blockquote\n      css={`\n        text-align: left;\n        color: rgb(91, 91, 91);\n        line-height: 1.5;\n        font-size: 16px;\n        margin: 20px 0 20px 0;\n        padding: 1px 0 1px 10px;\n        background: rgba(158, 158, 158, 0.1);\n        border-left: 3px solid rgb(158, 158, 158);\n      `}\n    >\n      <p>{children}</p>\n    </blockquote>\n  )\n}\n\nfunction P({ children }: ComponentProps) {\n  return (\n    <p\n      css={`\n      text-align: left;\n      color: #3f3f3f;\n      line-height: 1.6,\n      font-size: 16px;\n      margin: 20px 0 20px 0;\n    `}\n    >\n      {children}\n    </p>\n  )\n}\n\nfunction isReactElement(something: any) {\n  return something.$$typeof === Symbol.for('react.element')\n}\n\nfunction isTableHead(something: any) {\n  return isReactElement(something) && something.type === 'thead'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction isTh(something: any) {\n  return isReactElement(something) && something.type === 'th'\n}\n\nfunction isTableBody(something: any) {\n  return isReactElement(something) && something.type === 'tbody'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction isTr(something: any) {\n  return isReactElement(something) && something.type === 'tr'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction isTd(something: any) {\n  return isReactElement(something) && something.type === 'td'\n}\n\nconst tableSegs = ['thead', 'tbody', 'tr', 'th', 'td']\ntype TableSegs = typeof tableSegs\n\ninterface StyleTree {\n  style?: any\n  children?: TableSegMapper\n}\n\ntype TableSegMapper = {\n  [key in TableSegs[number]]: StyleTree\n}\n\nconst tableStyles: StyleTree = {\n  children: {\n    thead: {\n      style: css`\n        text-align: left;\n        color: #3f3f3f;\n        line-height: 1.5;\n        font-size: 16px;\n        background-color: rgba(0, 0, 0, 0.05);\n      `,\n      children: {\n        tr: {\n          style: {},\n          children: {\n            th: {\n              style: css`\n                font-size: 80%;\n                border: 1px solid #dfdfdf;\n                padding: 4px 8px;\n              `,\n            },\n          },\n        },\n      },\n    },\n    tbody: {\n      style: css`\n        text-align: left;\n        color: #3f3f3f;\n        line-height: 1.5;\n        font-size: 16px;\n      `,\n      children: {\n        tr: {\n          children: {\n            td: {\n              style: css`\n                font-size: 80%;\n                border: 1px solid #dfdfdf;\n                padding: 4px 8px;\n              `,\n            },\n          },\n        },\n      },\n    },\n  },\n}\n\nfunction getStyle(path: string) {\n  const segments = path.split('.')\n  let index = 0\n  let current: StyleTree | undefined = tableStyles\n  while (segments[index] && current) {\n    current = current.children && current.children[segments[index]]\n    index++\n  }\n  return current?.style\n}\n\nfunction Table({ children }: ComponentProps & { children: any[] }) {\n  return (\n    <table>\n      {React.Children.map(\n        children.find((child: any) => isTableHead(child)),\n        (child_thead) => (\n          <thead css={getStyle('thead')}>\n            <tr>\n              {React.Children.map(child_thead.props.children[0].props.children, (child) => (\n                <td css={getStyle('thead.tr.th')}>{child.props.children}</td>\n              ))}\n            </tr>\n          </thead>\n        )\n      )}\n      {React.Children.map(\n        children.find((child: any) => isTableBody(child)),\n        (child_body) => (\n          <tbody css={getStyle('tbody')}>\n            {React.Children.map(child_body.props.children, (tr) => (\n              <tr>\n                {React.Children.map(tr.props.children, (td) => (\n                  <td css={getStyle('tbody.tr.td')}>{td.props.children}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        )\n      )}\n    </table>\n  )\n}\n\nfunction getItems(children: any[]) {\n  return children.filter((child) => child.$$typeof === Symbol.for('react.element') && child.type === 'li')\n}\n\nconst listStyles = css`\n  text-align: left;\n  color: #3f3f3f;\n  line-height: 1.5;\n  font-size: 16px;\n  margin: 20px 0 20px 0;\n  padding-left: 20px;\n  list-style: initial;\n`\n\nfunction Ol({ children }: ComponentProps) {\n  return (\n    <ol\n      css={`\n        ${listStyles}\n        list-style: decimal;\n      `}\n    >\n      {React.Children.map(getItems(children), (child) => (\n        <li\n          key={child.props.children}\n          {...child.props.children}\n          css={`\n            text-align: left;\n            color: #352a2a;\n            line-height: 1.5;\n            font-size: 16px;\n          `}\n        >\n          {child.props.children}\n        </li>\n      ))}\n    </ol>\n  )\n}\n\nfunction Ul({ children }: ComponentProps) {\n  return (\n    <ul\n      css={`\n        ${listStyles}\n        list-style: initial;\n      `}\n    >\n      {React.Children.map(getItems(children), (child) => (\n        <li\n          key={child.props.children}\n          {...child.props.children}\n          css={`\n            text-align: left;\n            color: #352a2a;\n            line-height: 1.5;\n            font-size: 16px;\n          `}\n        >\n          {child.props.children}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport { P, H1, H2, CodeBlock, InlineCode, A, Blockquote, ReferLink, Table, Ol, Ul }\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { referLinksState } from 'states/markdown'\nimport { H2 } from './elements'\n\nexport default function References() {\n  const referLinks = useRecoilValue(referLinksState)\n\n  return (\n    <>\n      <H2>References</H2>\n      <p\n        style={{\n          textAlign: 'left',\n          color: '#3f3f3f',\n          lineHeight: 1.5,\n          fontSize: '14px',\n          margin: '20px 0 20px 0',\n        }}\n      >\n        {referLinks.map(({ text, href }, index) => (\n          <React.Fragment key={href}>\n            <code\n              css={`\n                font-size: 90%;\n                opacity: 0.6;\n              `}\n            >\n              [{index + 1}]\n            </code>\n            &nbsp;{text}&nbsp;:\n            <br />\n            <i>{href}</i>\n            <br />\n          </React.Fragment>\n        ))}\n      </p>\n    </>\n  )\n}\n","import { atom } from 'recoil'\nimport { nanoid } from 'nanoid'\n\n// dom id for reference\n\nconst rendererState = atom<string>({\n  key: 'rendererState',\n  /**\n   * In the begining, I use follow script to gen an ID.\n   * ```javascript\n   * `Math.random()`.slice(2)\n   *\n   * ```\n   * But document.querySelector has such a limitation that I hadn't aware.\n   * querySelector method uses CSS3 selectors for querying the DOM and CSS3 doesn't support ID selectors that start with a digit:\n   * > In CSS, identifiers (including element names, classes, and IDs in selectors) can contain only the characters [a-zA-Z0-9] and ISO 10646 characters U+00A0 and higher, plus the hyphen (-) and the underscore (_); they cannot start with a digit, two hyphens, or a hyphen followed by a digit.\n   *\n   * Use document.getElementByid() is OK. But I think it's a good change to accept the issue and use a real id gen. In here, it's nanoid.\n   */\n  default: nanoid(),\n})\n\nexport { rendererState }\n","import React, { useMemo } from 'react'\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkSlug from 'remark-slug'\nimport remarkToc from 'remark-toc'\nimport remarkGfm from 'remark-gfm'\nimport remarkRehype from 'remark-rehype'\nimport rehypeHighlight from 'rehype-highlight'\nimport rehypeReact from 'rehype-react'\nimport References from './references'\nimport { markdownState } from 'states/markdown'\nimport { rendererState as rendererIDState } from 'states/id'\nimport { P, H1, H2, CodeBlock, InlineCode, A, Blockquote, Table, Ol, Ul } from './elements'\n\nimport 'highlight.js/styles/github.css'\nimport { useRecoilValue } from 'recoil'\n\nconst processor = unified()\n  .use(remarkParse)\n  .use(remarkGfm)\n  .use(remarkSlug)\n  .use(remarkToc)\n  .use(remarkRehype)\n  .use(rehypeHighlight)\n  .use(rehypeReact, {\n    createElement: React.createElement,\n    components: { a: A, blockquote: Blockquote, pre: CodeBlock, code: InlineCode, h1: H1, h2: H2, p: P, table: Table, ol: Ol, ul: Ul },\n  })\n\n// const theme = {\n//   fonts: {\n//     body: \"Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif\",\n//   },\n// }\n\nexport default function Renderer() {\n  const markdown = useRecoilValue(markdownState)\n  const id = useRecoilValue(rendererIDState)\n  //@ts-ignore\n  const children = useMemo(() => (markdown ? processor.processSync(markdown).result.props.children : ''), [markdown])\n\n  return (\n    <div\n      id={id}\n      //contentEditable\n      className=\"box-border\"\n      style={{\n        backgroundColor: '#fff',\n        padding: '40px',\n        width: 375,\n      }}\n    >\n      {children}\n      <References />\n    </div>\n  )\n}\n","/*\n * Defference Between Copy using Clipboard API(the write API) and document.execCommand('copy')\n * 1. Clipboard API works async, document.execCommand('copy') works sync.\n * 2. Clipboard API works on content, e.g. HTML. You can save html anywhere and copy using Clipboard API. But, document.execCommand('copy') indrectly relys on the DOM object. That means you have to pass the ref of the DOM object. It's not easy for FP actually.\n * 3. Clipboard API works on content, e.g. HTML, that means the content should contain everything. For rich text copy & paste, it's required to apply all styles directly to the HTML so that the copy works. This is a limitation for complex use case. But not a problem for  document.execCommand('copy'). This time, document.execCommand('copy') wins.\n *\n * Any way, choose what suits your requirements. In my opinion, Clipboard API looks nices, but for some cases such as rich text copy & paste, it's bad.\n *\n * @2021-12-15. Pengson Wang <guyusay@gmail.com>\n *\n */\nasync function copyToClipboard(editableElement: HTMLElement, useExecCmd = false): Promise<boolean> {\n  if (!useExecCmd && navigator.clipboard) {\n    const html = editableElement.innerHTML\n    const blobInput = new Blob([html], { type: 'text/html' })\n    //@ts-ignore\n    const clipboardItemInput = new ClipboardItem({ 'text/html': blobInput })\n    return navigator.clipboard.write([clipboardItemInput]).then(() => true)\n  }\n  /*\n   * fallback to older browsers (including Safari)\n   * if clipboard API not supported\n   */\n  const range = document.createRange()\n  range.selectNode(editableElement)\n  const select = window.getSelection()\n  select?.removeAllRanges()\n  select?.addRange(range)\n  document.execCommand(`copy`)\n  setTimeout(() => {\n    select?.removeAllRanges()\n  })\n\n  return Promise.resolve(true)\n}\n\nexport default copyToClipboard\n","import { useCallback, MouseEventHandler } from 'react'\nimport Renderer from './renderer'\nimport { useRecoilValue } from 'recoil'\nimport copyToClipboard from 'utils/copy-to-clipboard'\n// import { ActionBar } from '../action'\n// import { Copy, Settings, IconButton } from '../icons'\n// import { ControlledPopup } from 'components/popup/popup'\n// import SettingsPanel from 'components/settings'\nimport { rendererState as rendererIDState } from 'states/id'\n\n// interface ShadowProps {\n//   children: any\n//   [p: string]: any\n// }\n// function Shadow(props: ShadowProps) {\n//   const ref = useCallback((node: HTMLDivElement | null) => {\n//     if (node !== null) {\n//       const shadow = node.attachShadow({ mode: 'open' })\n//       const style = document.createElement('style')\n//       const styleContent = `\n//       :host {\n//         all: initial;\n//       }\n//       `\n//       style.type = 'text/css'\n//       style.appendChild(document.createTextNode(styleContent))\n//       render(props.children, shadow)\n//       shadow.appendChild(style)\n//     }\n//   }, [])\n//   return <div ref={ref} />\n// }\n\nexport default function ConfiguredRenderer() {\n  const id = useRecoilValue(rendererIDState)\n  const handleCopy = useCallback<MouseEventHandler<HTMLButtonElement | HTMLAnchorElement>>(\n    (e) => {\n      if (document.querySelector(`#${id}`)) {\n        copyToClipboard(document.querySelector(`#${id}`) as HTMLElement, true)\n      }\n    },\n    [id]\n  )\n\n  // const [settingsOpened, setSettingsOpened] = useState<boolean>(false)\n  // const handleClose = useCallback(() => setSettingsOpened(false), [])\n  // const handleOpen = useCallback(() => setSettingsOpened(true), [])\n  // const SettingsPanelPopup = useMemo(\n  //   () => <ControlledPopup opened={settingsOpened} handleClose={handleClose} render={() => <SettingsPanel />} />,\n  //   [settingsOpened, handleClose]\n  // )\n\n  return (\n    <div className=\"flex flex-col items-center overflow-y-auto\">\n      {/* <ActionBar>\n        <IconButton onClick={handleCopy} icon={<Copy />} />\n        <IconButton onClick={handleOpen} icon={<Settings />} />\n        {SettingsPanelPopup}\n      </ActionBar> */}\n      <p>\n        <button\n          type=\"button\"\n          onClick={handleCopy}\n          className=\"bg-sky-600 text-blue-600 hover:text-blue-800 underline underline-offset-8 decoration-blue-50\"\n        >\n          点这里复制\n        </button>\n        文本，然后粘贴到您的博客或者其他网站。\n      </p>\n      <Renderer />\n    </div>\n  )\n}\n","// available themes are at https://codemirror.net/theme/\n// To enable a theme, import the css ([theme-name].css) and also set theme property of the editor\nconst editorThemes = [\n  '3024-day',\n  '3024-night',\n  'abbott',\n  'abcdef',\n  'ambiance-mobile',\n  'ambiance',\n  'ayu-dark',\n  'ayu-mirage',\n  'base16-dark',\n  'base16-light',\n  'bespin',\n  'blackboard',\n  'cobalt',\n  'colorforth',\n  'darcula',\n  'dracula',\n  'duotone-dark',\n  'duotone-light',\n  'eclipse',\n  'elegant',\n  'erlang-dark',\n  'gruvbox-dark',\n  'hopscotch',\n  'icecoder',\n  'idea',\n  'isotope',\n  'juejin',\n  'lesser-dark',\n  'liquibyte',\n  'lucario',\n  'material-darker',\n  'material-ocean',\n  'material-palenight',\n  'material',\n  'mbo',\n  'mdn-like',\n  'midnight',\n  'monokai',\n  'moxer',\n  'neat',\n  'neo',\n  'night',\n  'nord',\n  'oceanic-next',\n  'panda-syntax',\n  'paraiso-dark',\n  'paraiso-light',\n  'pastel-on-dark',\n  'railscasts',\n  'rubyblue',\n  'seti',\n  'shadowfox',\n  'solarized',\n  'ssms',\n  'the-matrix',\n  'tomorrow-night-bright',\n  'tomorrow-night-eighties',\n  'ttcn',\n  'twilight',\n  'vibrant-ink',\n  'xq-dark',\n  'xq-light',\n  'yeti',\n  'yonce',\n  'zenburn',\n] as const\n\nexport const defaultTheme = 'xq-light'\n\nexport default editorThemes\n","import { atom } from 'recoil'\nimport editorThemes, { defaultTheme } from 'constants/editorThemes'\n\ntype Themes = typeof editorThemes\ntype Mapper = {\n  [key in Themes[number]]: string\n}\nexport type EditorTheme = keyof Mapper\n\nexport const availableThemesState = atom<typeof editorThemes>({\n  key: 'availableThemesState',\n  default: editorThemes,\n})\n\nexport const editorThemeState = atom<EditorTheme>({\n  key: 'editorThemeState',\n  default: defaultTheme,\n})\n\nexport const editorFontSizeState = atom<number>({\n  key: 'editorFontSizeState',\n  default: 14,\n})\n","import React, { Component } from 'react'\n\ninterface Props {\n  current: any\n  onClick(next: any): void\n  Component: typeof Component\n}\n\nfunction Action({ current, onClick, Component }: Props) {\n  return <Component data-value={current} onClick={onClick} />\n}\n\nfunction ActionBar({ children }: { children: any }) {\n  return <div>{children}</div>\n}\n\nexport { Action, ActionBar }\nexport default ActionBar\n","import React, { MouseEventHandler, ReactElement } from 'react'\nconst Copy = ({ size = 24, color = '#5a6a7a' }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n  </svg>\n)\n\nconst DownloadCloud = ({ size = 24, color = '#5a6a7a' }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M21.2 15c.7-1.2 1-2.5.7-3.9-.6-2-2.4-3.5-4.4-3.5h-1.2c-.7-3-3.2-5.2-6.2-5.6-3-.3-5.9 1.3-7.3 4-1.2 2.5-1 6.5.5 8.8M12 19.8V12M16 17l-4 4-4-4\" />\n  </svg>\n)\n\nconst Settings = ({ size = 24, color = '#5a6a7a' }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\n  </svg>\n)\n\nfunction IconButton({ onClick, icon, ...rest }: { onClick: MouseEventHandler<HTMLButtonElement>; icon: ReactElement; [p: string]: any }) {\n  return (\n    <button onClick={onClick} {...rest}>\n      {icon}\n    </button>\n  )\n}\n\nexport { Copy, DownloadCloud, Settings, IconButton }\n","import { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nfunction randomeStr() {\n  return `${Math.random()}`.substr(2)\n}\n\nfunction useContainer() {\n  const [container, setContainer] = useState<HTMLDivElement>()\n\n  useEffect(() => {\n    if (!container) {\n      const dom = document.createElement('div') as HTMLDivElement\n      dom.id = randomeStr()\n      document.body.appendChild(dom)\n      setContainer(dom)\n      return () => {\n        if (dom && document.getElementById(dom.id)) {\n          document.body.removeChild(dom)\n        }\n      }\n    }\n  }, [container])\n\n  return container\n}\n\ninterface Props {\n  children: any\n  l?: any\n}\n\nfunction Portal({ children }: Props) {\n  const container = useContainer()\n\n  if (container) {\n    return ReactDOM.createPortal(children, container)\n  }\n  return null\n}\n\nexport default Portal\n","import React, { useCallback, useEffect, useMemo } from 'react'\nimport { Transition } from 'react-transition-group'\nimport Portal from './portal'\nimport { atom, useRecoilState } from 'recoil'\nimport { nanoid } from 'nanoid'\n\nexport type State = 'entering' | 'entered' | 'exiting' | 'exited'\n\nexport interface InnerState {\n  state: State\n  handleClose(): void\n}\n\ninterface OverlaysState {\n  [key: string]: boolean\n}\n\nexport const overlaysState = atom<OverlaysState>({\n  key: 'overlays',\n  default: {} as OverlaysState,\n})\n\ninterface Props {\n  render({ state, handleClose }: InnerState): JSX.Element\n}\n\ntype ControlledProps = Props & { opened: boolean; handleClose: () => void }\n\nexport function ControlledPopup({ render, opened, handleClose }: ControlledProps) {\n  return (\n    <Portal>\n      <React.Fragment>\n        <div\n          onClick={handleClose}\n          css={`\n            display: ${opened ? 'initial' : 'none'};\n            backgroundcolor: gray;\n            opacity: 0.3;\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          `}\n        />\n        <Transition in={Boolean(opened)} timeout={50}>\n          {(state: State) => (\n            <div\n            // sx={{\n            //   display: state === 'entered' ? 'initial' : 'none',\n            //   left: '50%',\n            //   transform: 'translateX(-50%)',\n            //   backgroundColor: 'white',\n            //   position: 'fixed',\n            //   top: 80,\n            //   zIndex: '100',\n            //   width: 750,\n            //   height: '68vh',\n            // }}\n            >\n              {render({ state, handleClose })}\n            </div>\n          )}\n        </Transition>\n      </React.Fragment>\n    </Portal>\n  )\n}\n\nfunction Popup({ render }: Props) {\n  const id = useMemo(() => nanoid(), [])\n  const [overlays, setOverlays] = useRecoilState(overlaysState)\n  const opened = useMemo(() => overlays[id], [overlays, id])\n  useEffect(() => {\n    setOverlays((state) => ({ ...state, [id]: false }))\n  }, [id, setOverlays])\n  const handleClose = useCallback(() => {\n    setOverlays((state) => ({ ...state, [id]: false }))\n  }, [id, setOverlays])\n\n  return <ControlledPopup opened={opened} handleClose={handleClose} render={render} />\n}\n\nexport default Popup\n","import React from 'react'\n\nexport default function Settings() {\n  return <div>Coming soon</div>\n}\n","import React, { useCallback, useState, useMemo } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { editorThemeState, availableThemesState, EditorTheme, editorFontSizeState } from 'states/preferences/editor'\nimport { ActionBar } from './action'\nimport { Settings, IconButton } from './icons'\nimport { ControlledPopup } from 'components/popup/popup'\nimport SettingsPanel from 'components/settings'\n\nfunction Editor() {\n  const availableThemes = useRecoilValue(availableThemesState)\n  const [theme, setTheme] = useRecoilState(editorThemeState)\n  const handleThemeChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      setTheme(e.target.value as EditorTheme)\n    },\n    [setTheme]\n  )\n\n  const [fontSize, setFontSize] = useRecoilState(editorFontSizeState)\n\n  return (\n    <>\n      <select value={theme} onChange={handleThemeChange}>\n        {availableThemes.map((theme) => (\n          <option key={theme} value={theme}>\n            {theme}\n          </option>\n        ))}\n      </select>\n      <label>Font Size</label>\n      <input type=\"number\" value={fontSize} onChange={(e) => setFontSize(parseInt(e.target.value, 10))} />\n    </>\n  )\n}\n\nfunction Proferences() {\n  const [settingsOpened, setSettingsOpened] = useState<boolean>(false)\n  const handleClose = useCallback(() => setSettingsOpened(false), [])\n  const handleOpen = useCallback(() => setSettingsOpened(true), [])\n  const SettingsPanelPopup = useMemo(\n    () => <ControlledPopup opened={settingsOpened} handleClose={handleClose} render={() => <SettingsPanel />} />,\n    [settingsOpened, handleClose]\n  )\n  return (\n    <ActionBar>\n      <Editor />\n\n      <IconButton onClick={handleOpen} icon={<Settings />} className=\"hidden\" />\n      {SettingsPanelPopup}\n    </ActionBar>\n  )\n}\n\nexport default Proferences\n","import { useEffect, useState, useRef, useCallback } from 'react'\nimport { useRecoilState } from 'recoil'\n//@ts-ignore\nimport CodeMirror from 'codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/markdown/markdown.js'\nimport { markdownState } from 'states/markdown'\nimport { EditorTheme } from 'states/preferences/editor'\n\ninterface Props {\n  theme: EditorTheme\n  fontSize?: number\n}\n\nfunction Editor({ theme, fontSize = 14 }: Props) {\n  const ref = useRef<HTMLDivElement>(null)\n  const [editor, setEditor] = useState<any>(null)\n  const [markdown, setMarkdown] = useRecoilState(markdownState)\n  const [initialValue] = useState(markdown)\n  const handleChange = useCallback(\n    (instance) => {\n      setMarkdown(instance.getValue())\n    },\n    [setMarkdown]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      const editor = new CodeMirror(ref.current, {\n        mode: {\n          name: 'markdown',\n          highlightFormatting: true,\n        },\n        value: initialValue, // not works, why?\n        tabSize: 2,\n      })\n      editor.on('change', handleChange)\n      editor.getDoc().setValue(initialValue)\n      setEditor(editor)\n\n      return () => {\n        editor.off('change', handleChange)\n      }\n    }\n  }, [ref, handleChange, initialValue])\n\n  useEffect(() => {\n    if (editor && theme) {\n      editor?.setOption('theme', theme)\n      require(`codemirror/theme/${theme}.css`)\n    }\n  }, [editor, theme])\n\n  return (\n    <div\n      ref={ref}\n      className=\"box-border overflow-y-auto border-2 border-gray-500 hover:border-purple-500\"\n      css={`\n        font-size: ${fontSize}px;\n        & > .CodeMirror {\n          height: 100%;\n        }\n      `}\n    ></div>\n  )\n}\n\nexport default Editor\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { editorThemeState, editorFontSizeState } from 'states/preferences/editor'\nimport Editor from './editor'\n\nexport default function ConfiguredEditor() {\n  const theme = useRecoilValue(editorThemeState)\n  const fontSize = useRecoilValue(editorFontSizeState)\n\n  return <Editor theme={theme} fontSize={fontSize} />\n}\n","import Renderer from 'components/renderer'\nimport Preperences from 'components/preferences'\nimport Editor from 'components/editor'\n\nfunction App() {\n  return (\n    <div className=\"h-screen max-h-screen\">\n      <div id=\"preferences\" className=\"fixed top-0 left-0 h-10 bg-slate-500\">\n        <Preperences />\n      </div>\n\n      <div className=\"h-screen max-h-screen pt-10 xl:container mx-auto p-2 grid grid-cols-2 gap-8\">\n        <Editor />\n        <Renderer />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { RecoilRoot } from 'recoil'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}